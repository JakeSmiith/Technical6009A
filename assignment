*Q2
install.packages("tidyverse")
library(tidyverse)
data(diamonds)
head(diamonds)

# Binwidth = 1000
ggplot(diamonds, aes(x = price)) +
  geom_histogram(binwidth = 1000, fill = "blue", color = "white") +
  labs(title = "Distribution of Diamond Prices", x = "Price (US Dollars)", y = "Frequency")

# Histogram with default binwidth (500)
ggplot(diamonds, aes(x = price)) +
    geom_histogram(binwidth = 500, fill = "blue", color = "white") +
    labs(title = "Distribution of Diamond Prices", x = "Price (US Dollars)", y = "Frequency")

# Binwidth = 250
ggplot(diamonds, aes(x = price)) +
  geom_histogram(binwidth = 250, fill = "blue", color = "white") +
  labs(title = "Distribution of Diamond Prices", x = "Price (US Dollars)", y = "Frequency")

# Binwidth = 125
ggplot(diamonds, aes(x = price)) +
  geom_histogram(binwidth = 250, fill = "blue", color = "white") +
  labs(title = "Distribution of Diamond Prices", x = "Price (US Dollars)", y = "Frequency")

* Freedman-Diaconis Rule for binwidth (answer 232)
fd_binwidth <- 2 * IQR(diamonds$price) / length(diamonds$price)^(1/3)
fd_binwidth <- round(fd_binwidth, 0)  # Round to nearest integer
cat("Suggested Binwidth (Freedman-Diaconis):", fd_binwidth, "\n")

*Skewness and Kurtosis
install.packages("moments")
library(moments)
# Calculate skewness and kurtosis
price_skewness <- round(skewness(diamonds$price), 2)
price_kurtosis <- round(kurtosis(diamonds$price), 2)

# Print the results
cat("Skewness of price:", price_skewness, "\n")
*1.62
cat("Kurtosis of price:", price_kurtosis, "\n")
*5.18
*Part 2
ggplot(diamonds, aes(x = clarity, y = price)) +
  geom_boxplot(fill = "lightblue") +
  labs(
    title = "Boxplot of Diamond Prices by Clarity",
    x = "Clarity Level",
    y = "Price (US Dollars)"
  ) +
  theme_minimal()

ggplot(diamonds, aes(x = price)) +
  geom_histogram(binwidth = 250, fill = "blue", color = "white") +
  facet_wrap(~ clarity) +
  labs(
    title = "Histogram of Diamond Prices by Clarity",
    x = "Price (US Dollars)",
    y = "Frequency"
  ) +
  theme_minimal()

diamonds %>%
  group_by(clarity) %>%
  summarise(
    min_price = min(price),
    max_price = max(price),
    median_price = median(price),
    mean_price = mean(price),
    count = n()
  ) %>%
  arrange(clarity)
